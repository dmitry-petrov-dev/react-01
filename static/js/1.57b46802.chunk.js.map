{"version":3,"sources":["components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","mainPhoto","descriptionBlock","contact","postsBlock","posts","item","Post","props","react_default","a","createElement","className","classes","src","alt","message","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","_ref2","handleSubmit","onSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","_ref","addPost","postElements","map","post","MyPosts_Post_Post","values","newPost","connect","state","profilePage","newPostText","ProfileStatus","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataFormReduxForm","enableReinitialize","destroyOnUnmount","profile","error","classesForm","formSummaryError","createField","Input","type","keys","contacts","key","ProfileData","isOwner","startEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","photos","large","userAvatar","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatus","Profile","store","MyPosts_ProfileInfo_ProfileInfo","MyPostsContainer","ProfileContainer","profileId","this","router","params","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","React","Component","compose","auth","userId","isAuth","WithRouter","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,UAAA,+BAAAC,iBAAA,sCAAAC,QAAA,mDCAlBJ,EAAAC,QAAA,CAAkBI,WAAA,4BAAAC,MAAA,6CCAlBN,EAAAC,QAAA,CAAkBM,KAAA,qMCiBHC,EAfF,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQP,MACtBG,EAAAC,EAAAC,cAAA,OACEG,IAAI,6TACJC,IAAI,WAELP,EAAMQ,QACPP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCCFFM,EAAcC,YAAiB,IAsC/BC,EAAsBC,YAAU,CAAEC,KAAM,qBAAlBD,CAlBL,SAAAE,GAA6B,IAA1BC,EAA0BD,EAA1BC,aAA0BD,EAAZd,MACtC,OACEC,EAAAC,EAAAC,cAAA,QAAMa,SAAUD,GACdd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,UAAWC,IACXC,KAAK,UACLC,YAAY,iBACZC,SAAU,CAACC,IAAUd,MAGzBR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAUOqB,EAxCC,SAAAC,GAA+B,IAA5B5B,EAA4B4B,EAA5B5B,MAAO6B,EAAqBD,EAArBC,QAClBC,GADuCF,EAAZzB,MACZH,EAAM+B,IAAI,SAACC,GAAD,OAAU5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAMtB,QAASqB,EAAKrB,aAM7D,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,YACtBK,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACQ,EAAD,CAAqBK,SARR,SAACe,GAClBL,EAAQK,EAAOC,aASb/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,OAAQ8B,KCdvBM,cAPS,SAACC,GACvB,MAAO,CACLrC,MAAOqC,EAAMC,YAAYtC,MACzBuC,YAAaF,EAAMC,YAAYC,cAIK,CAAEV,aAA3BO,CAAsCT,uDCsCtCa,EA9CO,SAACrC,GAAU,IAAAsC,EACCC,oBAAS,GADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GACdI,EADcJ,EAAA,GAAAK,EAEHN,mBAASvC,EAAM8C,QAFZC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAExBC,EAFwBC,EAAA,GAEhBC,EAFgBD,EAAA,GAI/BE,oBAAU,WACRD,EAAUhD,EAAM8C,SACf,CAAC9C,EAAM8C,SAaV,OACE7C,EAAAC,EAAAC,cAAA,YACIwC,GACA1C,EAAAC,EAAAC,cAAA,WACG,IACDF,EAAAC,EAAAC,cAAA,mBAFF,IAGEF,EAAAC,EAAAC,cAAA,QAAM+C,cAlBW,WACvBN,GAAY,KAkBH5C,EAAM8C,QAAU,iBAItBH,GACC1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBADF,IAGEF,EAAAC,EAAAC,cAAA,SACEgD,SApBa,SAACC,GACtBJ,EAAUI,EAAEC,cAAcC,QAoBlBC,WAAW,EACXC,OA3BiB,WACzBZ,GAAY,GACZ5C,EAAMyD,iBAAiBX,IA0BfQ,MAAOR,wBCgBJY,EALkB9C,YAAU,CACzCC,KAAM,eACN8C,oBAAoB,EACpBC,kBAAkB,GAHahD,CA1CT,SAAAa,GAAsC,IAAnCoC,EAAmCpC,EAAnCoC,QAAS9C,EAA0BU,EAA1BV,aAAc+C,EAAYrC,EAAZqC,MAChD,OACE7D,EAAAC,EAAAC,cAAA,QAAMa,SAAUD,GACdd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAED2D,GAAS7D,EAAAC,EAAAC,cAAA,OAAKC,UAAW2D,IAAYC,kBAAmBF,GACzD7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBADF,IACmB8D,YAAY,YAAa,WAAY,GAAIC,MAE5DjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BADF,IAC4B,IACzB8D,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAAEC,KAAM,cAExDlE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BADF,IACyB,IACtB8D,YACC,iBACA,4BACA,GACA9C,MAGJlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBADF,KACoB8D,YAAY,WAAY,UAAW,GAAI9C,MAE3DlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBADF,IAEGsC,OAAO2B,KAAKP,EAAQQ,UAAUzC,IAAI,SAAC0C,GAClC,OACErE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,SACtBM,EAAAC,EAAAC,cAAA,SACGmE,EADH,KACUL,YAAYK,EAAK,YAAcA,EAAK,GAAIJ,aCmB1DK,EAAc,SAAAzD,GAAyC,IAAtC+C,EAAsC/C,EAAtC+C,QAASW,EAA6B1D,EAA7B0D,QAASC,EAAoB3D,EAApB2D,cACvC,OACExE,EAAAC,EAAAC,cAAA,WACGqE,GACCvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQuE,QAASD,GAAjB,SAIJxE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBADF,KACoB0D,EAAQc,UAE5B1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BADF,KAC6B0D,EAAQe,eAAiB,MAAQ,MAE7Df,EAAQe,gBACP3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BADF,KAC0B0D,EAAQgB,2BAGpC5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBADF,KACoB0D,EAAQiB,SAE5B7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBADF,IAEGsC,OAAO2B,KAAKP,EAAQQ,UAAUzC,IAAI,SAAC0C,GAClC,OACErE,EAAAC,EAAAC,cAAC4E,EAAD,CACET,IAAKA,EACLU,aAAcV,EACdW,aAAcpB,EAAQQ,SAASC,UASvCY,EAAU,SAAAC,GAAoC,IAAjCH,EAAiCG,EAAjCH,aAAcC,EAAmBE,EAAnBF,aAC/B,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,SACtBM,EAAAC,EAAAC,cAAA,SAAI6E,GADN,KAC0BC,IAKfG,EArGK,SAAA3D,GAQd,IAPJ+C,EAOI/C,EAPJ+C,QACAX,EAMIpC,EANJoC,QACAf,EAKIrB,EALJqB,OACAW,EAIIhC,EAJJgC,iBACA4B,EAGI5D,EAHJ4D,UACAC,EAEI7D,EAFJ6D,YAEI7D,EADJzB,MAEA,IAAK6D,EACH,OAAO5D,EAAAC,EAAAC,cAACoF,EAAA,EAAD,MAFL,IAAAjD,EAI4BC,oBAAS,GAJrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIGK,EAJHH,EAAA,GAIaI,EAJbJ,EAAA,GAiBJ,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,kBACtBO,EAAAC,EAAAC,cAAA,OACEG,IAAKuD,EAAQ2B,OAAOC,OAASC,IAC7BnF,IAAI,UACJH,UAAWC,IAAQZ,YAEpB+E,EAAUvE,EAAAC,EAAAC,cAAA,SAAOgE,KAAM,OAAQhB,SAnBV,SAACC,GACvBA,EAAEuC,OAAOC,MAAMC,QACjBR,EAAUjC,EAAEuC,OAAOC,MAAM,OAiB6C,GAEnEjD,EACC1C,EAAAC,EAAAC,cAAC2F,EAAD,CACEC,cAAelC,EACfA,QAASA,EACT7C,SAnBO,SAACgF,GAChBV,EAAYU,GAAUC,KAAK,WACzBrD,GAAY,QAoBR3C,EAAAC,EAAAC,cAAC+F,EAAD,CACErC,QAASA,EACTW,QAASA,EACTC,cAAe,kBAAM7B,GAAY,MAGrC3C,EAAAC,EAAAC,cAACgG,EAAD,CAAerD,OAAQA,EAAQW,iBAAkBA,OC1B1C2C,EAzBC,SAAA3E,GASV,IARJ+C,EAQI/C,EARJ+C,QACAX,EAOIpC,EAPJoC,QACAf,EAMIrB,EANJqB,OACAuD,EAKI5E,EALJ4E,MACA5C,EAIIhC,EAJJgC,iBACA4B,EAGI5D,EAHJ4D,UACAC,EAEI7D,EAFJ6D,YAEI7D,EADJzB,MAEA,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmG,EAAD,CACE9B,QAASA,EACTX,QAASA,EACTf,OAAQA,EACRW,iBAAkBA,EAClB4B,UAAWA,EACXC,YAAaA,IAEfrF,EAAAC,EAAAC,cAACoG,EAAD,CAAkBF,MAAOA,uBCVzBG,2LAEF,IAAIC,EAAYC,KAAK1G,MAAM2G,OAAOC,OAAOH,UACpCA,IACHA,EAAYC,KAAK1G,MAAMyG,YAGrBC,KAAK1G,MAAM6G,QAAQC,KAAK,UAG5BJ,KAAK1G,MAAM+G,eAAeN,GAC1BC,KAAK1G,MAAMgH,cAAcP,+CAGzBC,KAAKO,4DAGYC,EAAWC,EAAWC,GAErCF,EAAUP,OAAOC,OAAOH,YAAcC,KAAK1G,MAAM2G,OAAOC,OAAOH,WAE/DC,KAAKO,kDAIP,OACEhH,EAAAC,EAAAC,cAACkH,EAAD5E,OAAA6E,OAAA,GACMZ,KAAK1G,MADX,CAEEwE,SAAUkC,KAAK1G,MAAM2G,OAAOC,OAAOH,UACnC5C,QAAS6C,KAAK1G,MAAM6D,QACpBf,OAAQ4D,KAAK1G,MAAM8C,OACnBW,iBAAkBiD,KAAK1G,MAAMyD,iBAC7B4B,UAAWqB,KAAK1G,MAAMqF,UACtBC,YAAaoB,KAAK1G,MAAMsF,sBAjCDiC,IAAMC,WA8CtBC,sBACbxF,YARsB,SAACC,GAAD,MAAY,CAClC2B,QAAS3B,EAAMC,YAAY0B,QAC3Bf,OAAQZ,EAAMC,YAAYW,OAC1B2D,UAAWvE,EAAMwF,KAAKC,OACtBC,OAAQ1F,EAAMwF,KAAKE,SAIM,CACvBb,mBACAC,kBACAvD,qBACA4B,cACAC,kBAEFuC,IACAC,IATaL,CAUbjB","file":"static/js/1.57b46802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__3i9Io\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2rRfb\",\"contact\":\"ProfileInfo_contact__3LUB6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3v4Nx\",\"posts\":\"MyPosts_posts__2Facv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1t14y\"};","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/ru/thumb/b/b3/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80_%D0%9F%D1%83%D1%82%D1%8C_%D0%B2%D0%BE%D0%B4%D1%8B_%D0%BF%D0%BE%D1%81%D1%82%D0%B5%D1%80.jpg/304px-%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80_%D0%9F%D1%83%D1%82%D1%8C_%D0%B2%D0%BE%D0%B4%D1%8B_%D0%BF%D0%BE%D1%81%D1%82%D0%B5%D1%80.jpg\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = ({ posts, addPost, props }) => {\r\n  const postElements = posts.map((post) => <Post message={post.message} />);\r\n\r\n  const addNewPost = (values) => {\r\n    addPost(values.newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={addNewPost} />\r\n      </div>\r\n      <div className={classes.posts}>{postElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddNewPostForm = ({ handleSubmit, props }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPost\"\r\n          placeholder=\"Enter new post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddPostBox\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPost })(MyPosts);\r\n","import React, { useEffect, useState } from \"react\";\r\n//import classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          {\" \"}\r\n          <b>Status</b>:\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"Enter status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <b>Status</b>\r\n          :\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"../../../common/FormsControls/FormsControls\";\r\nimport classesForm from \"./../../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n      {error && <div className={classesForm.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Fullname</b>:{createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:{\" \"}\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        <b>My prof skills</b>:{\" \"}\r\n        {createField(\r\n          \"My prof skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div className={classes.contact}>\r\n              <b>\r\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: \"edit-profile\",\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: false,\r\n})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport userAvatar from \"./../../../../assets/images/avatar-default.png\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  props,\r\n}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img\r\n          src={profile.photos.large || userAvatar}\r\n          alt=\"Profile\"\r\n          className={classes.mainPhoto}\r\n        />\r\n        {isOwner ? <input type={\"file\"} onChange={onMainPhotoSelected} /> : \"\"}\r\n        {/* {profile ? profile.aboutMe : \"ava + description\"} */}\r\n        {editMode ? (\r\n          <ProfileDataFormReduxForm\r\n            initialValues={profile}\r\n            profile={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            startEditMode={() => setEditMode(true)}\r\n          />\r\n        )}\r\n        <ProfileStatus status={status} updateUserStatus={updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, startEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={startEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <b>Fullname</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My prof skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  store,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  props,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateUserStatus={updateUserStatus}\r\n        savePhoto={savePhoto}\r\n        saveProfile={saveProfile}\r\n      />\r\n      <MyPostsContainer store={store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport WithRouter from \"../common/Router/WithRouter\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"./../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = this.props.profileId;\r\n      if (!profileId) {\r\n        /* Just example */\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(profileId);\r\n    this.props.getUserStatus(profileId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (\r\n      prevProps.router.params.profileId !== this.props.router.params.profileId\r\n    ) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.router.params.profileId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  profileId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  WithRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}